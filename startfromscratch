#!/bin/bash

SCRIPTDIR=$( (cd -P $(dirname ${BASH_SOURCE[0]:-$(/bin/pwd)/dummy}) && /bin/pwd) )
corename=hathi
DATADIR=$SCRIPTDIR/data

# load the shared bash functions log, vlog and Verbose
. $SCRIPTDIR/outputfuncs.bash $SCRIPTDIR

verbose=
force=
test=
while getopts :vt opt
 do
      case $opt in
          v) verbose=-v;;
          t) test=-t;;
      esac
done
shift $((OPTIND-1))

Verbose "Creating the necessary data directories"
mkdir -p $DATADIR
DUMPDIR=$DATADIR/full_dump
BACKUPDUMPDIR=$DATADIR/full_dump_prev
UPDATEDIR=$DATADIR/update
INPUTDIR=$DATADIR/incoming
PROCESSEDDIR=$DATADIR/processed
TOINDEXDIR=$DATADIR/toindex
INPUTDIR=$DATADIR/incoming
TMPDIR=$DATADIR/tmp

mkdir -p $DUMPDIR
mkdir -p $BACKUPDUMPDIR
mkdir -p $UPDATEDIR
mkdir -p $INPUTDIR
mkdir -p $PROCESSEDDIR
mkdir -p $INPUTDIR
mkdir -p $TMPDIR
for line in `cat $SCRIPTDIR/cores_to_process`
do 
    solrname=`echo $line| sed -e 's/:[^:]*//'`
    mkdir -p $DATADIR/toindex_$solrname
done

start_of_month=`date "+%Y%m01"`
full_dump_url="https://www.hathitrust.org/sites/www.hathitrust.org/files/hathifiles/hathi_full_${start_of_month}.txt.gz"
full_dump_file="$DATADIR/hathi_full_${start_of_month}.txt.gz"

if [[ ! -e $full_dump_file ]] ; then

    # check whether the update file pointed at by $updateurl get be retrieved
    Verbose "Checking whether the Full listing of all records in HathiTrust can be retrieved"
    cangetfile=`curl -I -s --write-out %{http_code} $full_dump_url | egrep "200 OK"`

    if [ "$cangetfile" == "" ] 
    then
        Echo "Error: Cannot get file $full_dump_url entire process is doomed.  Doomed, I say!"
        exit 1
    fi

    Verbose "Fetching Full listing of all records in HathiTrust (Note: Its about 600MB)"
    curl -s "$full_dump_url"  -o $DATADIR/hathi_full_${start_of_month}.txt.gz
fi

Verbose "Extracting the record numbers for all HathiTrust records that allow public access"
zcat $DATADIR/hathi_full_${start_of_month}.txt.gz | cut -f 2,4 | egrep '^allow' | cut -f 2 | sort | uniq > $DATADIR/hathi_full_recordnumber.txt

Verbose "Now fetch all of the MARC record specified in the list of record numbers"
$SCRIPTDIR/fetch_all_recs $verbose $DATADIR/hathi_full_recordnumber.txt $DUMPDIR

Verbose "Now fetch all update files that can be fetched from the beginning of the month, to now"
# NOTE the parameter -t below is intentional (rather than passing $test) to ensure the update steps only
#      affect the full dump without uploading any records to the s3 buckets
$SCRIPTDIR/updateifnewer $verbose -t

Verbose "Done fetching initial records for Hathi Trust Core, Ready for index_all"
if [[ "$test" != "-t" ]]; then
    $SCRIPTDIR/upload_all_records $verbose
fi

Verbose "Done initializing hathi data cache and core"

